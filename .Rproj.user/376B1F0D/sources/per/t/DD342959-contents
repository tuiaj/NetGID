---
title: "working_"
format: html
editor: visual
---


# DO NOT USE 



```{r}
load("ExData.RData")
```


```{r}
asp <- all_simple_paths(ig_dat, from="D020", to="P053")


  

#get nodes along the path
path_nodes <- unique(names(unlist(asp)))

# color nodes along path, start and end, etc.
new_nodes <- nodes %>% mutate(color=case_when(id == "D020" ~ "green", # starting node
                                                id == "P053" ~ "red", # ending node
                                                id %in% path_nodes ~ "orange", # all other nodes in the path
                                                TRUE ~ "grey")) %>%
  # remove label for everything not touching the nodes on the path
  mutate(label = case_when(id %in% path_nodes ~ label, TRUE ~ ' '))

path_edges <-  unlist(
  lapply(all_simple_paths(ig_dat,from=c("D020"),to=c("P053")),
         function(x)
           get.edge.ids(ig_dat, c(rbind(head(x,-1),x[-1])))
  ))

# Recolor the edges to make the selected ones red
new_edges <- edges %>% 
  mutate(color = case_when(id %in% path_edges ~ "red", TRUE ~ "grey"))  %>% 
  mutate(width = case_when(id %in% path_edges ~ 10, TRUE ~ 2))
```


```{r}
visNetwork(new_nodes, new_edges, width = "800px", height = "800px") %>%
  visIgraphLayout(randomSeed = 111, layout = "layout_with_dh") %>%
  visNodes(color = list(background = "color", border = "color"),
           font = list(size=32)) %>%
  visEdges(arrows = 'to', smooth = list(enabled = T)) %>%
  visLegend(width = 0.1, 
            position = "right", 
            addNodes = list(
              list(label = c("Start Node"), shape="square", color="green"),
              list(label = "Path Node", shape="dot", color="orange"),
              list(label="End Node", shape="dot", color="red")
            ),
            useGroups = F)  

basic_graph$x$main

newstuff <- basic_graph$x$edges |> 
  filter(if_any(everything(), ~grepl(paste0(path_nodes, "$",collapse = "|^"), .x)))

map(basic_graph$x, ~ nrow(.x))

idk <- basic_graph %+% subset(basic_graph$x$nodes, id == "D020")

idk
```


```{r}
all_inout |> 
  count(in_out)


edges_all <- edges |> 
  pivot_longer(cols = c("from", "to"), 
               names_to = "in_out", 
               values_to = "node") 


edges |> 
  mutate()

as.character(asp)
ls_ <- c()

idk3 <- edges_all |> 
  filter(node == "D020") 

 edges_all |> 
  filter(id == "13")|> 
  pull(node) |> 
  setdiff()

all_inout |> 
  filter(id == "D020")

nodes |> 
  filter(id == "D020")

nodexCols


```


You can add options to executable code like this

```{r}


idk <- all_inout |> 
  count(nodesubtype) 

idk2 <- idk |> 
  ggplot(aes(x = nodesubtype, y = n)) +
  geom_bar(stat = "identity")



idk2 %+% subset(idk2$data, nodesubtype == "SAS")


basic_graph$x
  

```

The `echo: false` option disables the printing of code (only output is displayed).
